# name: '[Deploy] Prod Tool API'

# permissions:
#   id-token: write
#   contents: read

# on:
#   push:
#     branches:
#       - prod
#     paths:
#       - 'apps/admin-api/**'
#   # workflow_dispatch:

# jobs:
#   deploy:
#     name: Deploy Docker image to ECS
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-east-1

#     - name: Login to Amazon ECR
#       run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin [ACCOUNT_ID].dkr.ecr.us-east-1.amazonaws.com

#     - name: Build, tag, and push Docker image
#       run: |
#         docker build -t [REPOSITORY_NAME]:latest .
#         docker tag [REPOSITORY_NAME]:latest [ACCOUNT_ID].dkr.ecr.us-east-1.amazonaws.com/[REPOSITORY_NAME]:latest
#         docker push [ACCOUNT_ID].dkr.ecr.us-east-1.amazonaws.com/[REPOSITORY_NAME]:latest

#     - name: Run Database Migrations
#       run: |
#         # Ensure the DB is accessible and use AWS RDS or another managed DB endpoint here
#         docker run --rm \
#           [ACCOUNT_ID].dkr.ecr.us-east-1.amazonaws.com/[REPOSITORY_NAME]:latest \
#           python manage.py migrate --noinput

#     - name: Update ECS service
#       run: |
#         aws ecs update-service --cluster [CLUSTER_NAME] --service [SERVICE_NAME] --force-new-deployment --region us-east-1
